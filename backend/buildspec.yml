version: 0.2

phases:
  pre_build:
    commands:
      - APP_NAME=cloudvisor-dev
      - REGION=eu-west-2
      - aws --version
      - jq --version
      - echo $CODEBUILD_WEBHOOK_EVENT
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 714130184239.dkr.ecr.eu-west-2.amazonaws.com
      - BACKEND_REPOSITORY_URI=714130184239.dkr.ecr.eu-west-2.amazonaws.com/$APP_NAME-backend
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)
      - IMAGE_TAG=latest
      - NEW_BACKEND_IMAGE=$BACKEND_REPOSITORY_URI:$IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $BACKEND_REPOSITORY_URI:latest backend/
      - docker tag $BACKEND_REPOSITORY_URI:latest $BACKEND_REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build is completed on `date`
      - echo Pushing the Docker image...
      - docker push $BACKEND_REPOSITORY_URI:$IMAGE_TAG
      - BACKEND_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$APP_NAME-back-end" --region $REGION)
      - NEW_BACKEND_TASK_DEFINITION=$(echo $BACKEND_TASK_DEFINITION | jq --arg IMAGE "$NEW_BACKEND_IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
      - NEW_BACKEND_TASK_INFO=$(aws ecs register-task-definition --region $REGION --cli-input-json "$NEW_BACKEND_TASK_DEFINITION")
      - NEW_BACKEND_REVISION=$(echo $NEW_BACKEND_TASK_INFO | jq '.taskDefinition.revision')
      - aws ecs update-service --cluster $APP_NAME --service "$APP_NAME-BackendService" --task-definition "$APP_NAME-back-end:${NEW_BACKEND_REVISION}"
      - echo All success!